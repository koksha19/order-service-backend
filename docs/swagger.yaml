openapi: 3.0.0
info:
  title: Order automation API
  description: This is an API which was creaed as a project at TechMagic academy.
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Server which hosts this API

paths:
  /products:
    get:
      tags:
        - main
      summary: Get a list of products
      parameters:
        - name: pagesize
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Fetched products successfully
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Products'
                  productCount:
                    type: integer
                    example: 5
        "500":
          description: Sever side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{productId}:
    get:
      tags:
        - main
      summary: Get a single product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Fetched product successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Fetched product successfully
                  product:
                    $ref: '#/components/schemas/Products'
        "404":
          description: Failed to find product with this id
        "500":
          description: Server side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          example: kljw3l2fsdof993j3
        title:
          type: string
          example: Guitar
        price:
          type: number
          example: 1000
        delivery:
          type: array
          items:
            $ref: '#/components/schemas/Delivery'
        description:
          type: string
          example: A great guitar
        image:
          type: string
          example: https://sc1.musik-produktiv.com/pic-010153533xl/suhr-custom-modern-3ts.jpg
        stock:
          type: number
          example: 5
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Error:
      type: object
      properties:
        message:
          type: string
          example: Some Error
        statusCode:
          type: number
          example: 500
        data:
          type: object
          example: { msg: Message, param: param.name.with.index, value: param value }
    Delivery:
      type: object
      properties:
        name:
          type: string
          example: Standard
        price:
          type: number
          example: 50
        checked:
          type: boolean
          example: true